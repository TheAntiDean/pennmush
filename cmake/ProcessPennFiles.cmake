MACRO(PennMUSH_MKCMDS)
    file(WRITE build/cmds.h "/* AUTOGENERATED FILE. DO NOT EDIT! */
#ifndef CMDS_H
#define CMDS_H
#include \"command.h\"\n\n")

    file(WRITE build/funs.h "/* AUTOGENERATED FILE. DO NOT EDIT! */
#ifndef FUNS_H
#define FUNS_H")

    file(GLOB files RELATIVE ${CMAKE_HOME_DIRECTORY} "src/*.c")

    foreach(file IN ITEMS ${files})
        if(NOT "${file}" STREQUAL "src/sqlite3.c")
            FILE(READ ${file} contents)
            file(APPEND build/cmds.h "/*\t\t${file}\t\t*/\n\n")
            file(APPEND build/funs.h "/*\t\t${file}\t\t*/\n\n")
            MESSAGE(STATUS ${file})

            unset(cmdmatch)
            unset(funmatch)
            string(REGEX MATCHALL "COMMAND\\(([A-Za-z0-9_])*\\)" cmdmatch "${contents}")
            string(REGEX MATCHALL "FUNCTION\\(([A-Za-z0-9_])*\\)" funmatch "${contents}")

            if(cmdmatch)
                string(REPLACE "COMMAND" "COMMAND_PROTO" cmdmatch "${cmdmatch}")

                foreach(cmd IN LISTS cmdmatch)
                    file(APPEND build/cmds.h "${cmd};\n")
                endforeach()
            endif()

            string(REPLACE "FUNCTION" "FUNCTION_PROTO" funmatch "${funmatch}")

            if(funmatch)
                foreach(fun IN LISTS funmatch)
                    string(STRIP "${fun}" funmatch)

                    file(APPEND build/funs.h "${fun};\n")
                endforeach()
            endif()
        endif()
    endforeach(file IN ITEMS ${files})

    file(APPEND build/funs.h "#endif\n")
    file(APPEND build/cmds.h "#endif\n")
    message(STATUS "cmds.h: Rebuild Complete")

    # copy files to hdrs directory if they are different to the ones there already
    if(EXISTS ${CMAKE_HOME_DIRECTORY}/hdrs/cmds.h)
        file(READ ${CMAKE_HOME_DIRECTORY}/hdrs/cmds.h cmds)
        file(READ ${CMAKE_HOME_DIRECTORY}/hdrs/funs.h funs)
        file(READ ${CMAKE_HOME_DIRECTORY}/build/cmds.h cmds_new)
        file(READ ${CMAKE_HOME_DIRECTORY}/build/funs.h funs_new)

        if(NOT "${cmds}" STREQUAL "${cmds_new}")
            file(COPY ${CMAKE_HOME_DIRECTORY}/build/cmds.h DESTINATION ${CMAKE_HOME_DIRECTORY}/hdrs)
        endif()

        if(NOT "${funs}" STREQUAL "${funs_new}")
            file(COPY ${CMAKE_HOME_DIRECTORY}/build/funs.h DESTINATION ${CMAKE_HOME_DIRECTORY}/hdrs)
        endif()
    else()
        file(COPY ${CMAKE_HOME_DIRECTORY}/build/cmds.h DESTINATION ${CMAKE_HOME_DIRECTORY}/hdrs)
        file(COPY ${CMAKE_HOME_DIRECTORY}/build/funs.h DESTINATION ${CMAKE_HOME_DIRECTORY}/hdrs)
    endif()
ENDMACRO(PennMUSH_MKCMDS)

MACRO(PennMUSH_MKSWITCHES)
    file(WRITE build/switches.h "/* AUTOGENERATED FILE. DO NOT EDIT! */
#ifndef SWITCHES_H
#define SWITCHES_H\n\n")

    FILE(STRINGS src/SWITCHES sw_contents)
    set(switch_count 1)

    foreach(SW_LINE IN ITEMS ${sw_contents})
        file(APPEND build/switches.h "#define SWITCH_${SW_LINE} ${switch_count}\n")
        MATH(EXPR switch_count "${switch_count}+1")
    endforeach(SW_LINE IN sw_contents)

    file(APPEND build/switches.h "\n#endif\n")

    file(COPY ${CMAKE_HOME_DIRECTORY}/build/funs.h DESTINATION ${CMAKE_HOME_DIRECTORY}/hdrs/)

    # copy switches.h into hdrs directory if it is different to the one there already
    if(EXISTS ${CMAKE_HOME_DIRECTORY}/hdrs/switches.h)
        file(READ ${CMAKE_HOME_DIRECTORY}/hdrs/switches.h switches)
        file(READ ${CMAKE_HOME_DIRECTORY}/build/switches.h switches_new)

        if(NOT "${switches}" STREQUAL "${switches_new}")
            file(COPY ${CMAKE_HOME_DIRECTORY}/build/switches.h DESTINATION ${CMAKE_HOME_DIRECTORY}/hdrs)
        endif()
    else()
        file(COPY ${CMAKE_HOME_DIRECTORY}/build/switches.h DESTINATION ${CMAKE_HOME_DIRECTORY}/hdrs)

    endif()
ENDMACRO(PennMUSH_MKSWITCHES)

macro(PennMUSH_MKHDRS)

    execute_process(COMMAND git log --pretty=format:'%h' -n 1
        OUTPUT_VARIABLE GIT_REV
        ERROR_QUIET)

    # Check whether we got any revision (which isn't
    # always the case, e.g. when someone downloaded a zip
    # file from Github instead of a checkout)
    if("${GIT_REV}" STREQUAL "")
        set(GIT_REV "N/A")
        set(GIT_DIFF "")
        set(GIT_TAG "N/A")
        set(GIT_BRANCH "N/A")
    else()
        execute_process(
            COMMAND bash -c "git diff --quiet --exit-code || echo +"
            OUTPUT_VARIABLE GIT_DIFF)
        execute_process(
            COMMAND git describe --exact-match --tags
            OUTPUT_VARIABLE GIT_TAG ERROR_QUIET)
        execute_process(
            COMMAND git rev-parse --abbrev-ref HEAD
            OUTPUT_VARIABLE GIT_BRANCH)

        string(STRIP "${GIT_REV}" GIT_REV)
        string(SUBSTRING "${GIT_REV}" 1 7 GIT_REV)
        string(STRIP "${GIT_DIFF}" GIT_DIFF)
        string(STRIP "${GIT_TAG}" GIT_TAG)
        string(STRIP "${GIT_BRANCH}" GIT_BRANCH)
    endif()

    set(VERSION "#define GIT_REVISION \"${GIT_REV}${GIT_DIFF}\"")

    if(EXISTS ${CMAKE_HOME_DIRECTORY}/hdrs/gitinfo.h)
        file(READ ${CMAKE_HOME_DIRECTORY}/hdrs/gitinfo.h VERSION_)
    else()
        set(VERSION_ "")
    endif()

    if(NOT "${VERSION}" STREQUAL "${VERSION_}")
        file(WRITE ${CMAKE_HOME_DIRECTORY}/hdrs/gitinfo.h "${VERSION}")
    endif()

    STRING(TIMESTAMP TIMEZ UTC)
    FILE(WRITE ${CMAKE_HOME_DIRECTORY}/hdrs/buildinf.h "#define BUILDDATE \"${TIMEZ}\"\n")
    FILE(APPEND ${CMAKE_HOME_DIRECTORY}/hdrs/buildinf.h "#define COMPILER \"${CMAKE_C_COMPILER}\"\n")
    FILE(APPEND ${CMAKE_HOME_DIRECTORY}/hdrs/buildinf.h "#define CCFLAGS \"${COMPILE_OPTIONS}\"")
endmacro()

macro(PennMUSH_MKFILES)
    if(NOT EXISTS "${CMAKE_HOME_DIRECTORY}/game/mush.cnf")
        execute_process(COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_HOME_DIRECTORY}/game/mushcnf.dst ${CMAKE_HOME_DIRECTORY}/game/mush.cnf)
    endif()

    if(NOT EXISTS "${CMAKE_HOME_DIRECTORY}/game/names.cnf")
        execute_process(COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_HOME_DIRECTORY}/game/namescnf.dst ${CMAKE_HOME_DIRECTORY}/game/names.cnf)
    endif()

    if(NOT EXISTS "${CMAKE_HOME_DIRECTORY}/game/log/connlog.db")
        FILE(TOUCH "${CMAKE_HOME_DIRECTORY}/game/log/connlog.db")
    endif()
    if(NOT EXISTS "${CMAKE_HOME_DIRECTORY}/game/txt/compose.sh")
        execute_process(COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_HOME_DIRECTORY}/game/txt/compose.sh.in  ${CMAKE_HOME_DIRECTORY}/game/txt/compose.sh)
        exec_program(sh ${CMAKE_HOME_DIRECTORY}/game/txt/compose.sh)
    endif()
    PennMUSH_MKHELP()

endmacro()

macro(PennMUSH_MKHELP)
file(GLOB files RELATIVE ${CMAKE_HOME_DIRECTORY} "game/txt/hlp/*.hlp")
file(WRITE ${CMAKE_HOME_DIRECTORY}/game/txt/help.txt "")
foreach(file IN ITEMS ${files})
    file(READ ${file} contents)
    file(APPEND ${CMAKE_HOME_DIRECTORY}/game/txt/help.txt "${contents}\n")

endforeach(file IN ITEMS ${files})
endmacro()
