<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Friday, August 12, 2022, 4:05 PM -->
<!-- MuClient version 5.06 -->

<!-- Plugin "SensorRep" generated by Plugin Wizard -->

<muclient>
<plugin
   name="SensorRep"
   author="naHrej"
   id="9dcad852768cd74ca185f3c8"
   language="Lua"
   purpose="Display sensor report"
   save_state="y"
   date_written="2022-08-12 16:04:05"
   requires="5.06"
   version="1.0"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>
  <trigger
   enabled="y"
   expand_variables="y"
   keep_evaluating="y"
   match="&lt;SENREP&gt;(?&lt;JSON&gt;.*)&lt;\/SENREP&gt;"
   omit_from_log="y"
   omit_from_output="y"
   regexp="y"
   script="json"
   send_to="9"
   sequence="100"
   variable="senrep"
  >
  <send>%&lt;JSON&gt;</send>
  </trigger>
</triggers>

<!--  Variables  -->

<variables>
  <variable name="senrep">{"SDB":1,"shipobj":68,"Contacts":{"0":{"SDB":2,"dbref":149,"Num":1,"Type":"Ship","Name":"Unresolved","Resolution":1.0200000000000009,"Bearing":0,"Elevation":0,"Range":"0.00000","Arc":"FAPSUD","FacingArc":"FAPSUD","HeadingX":1,"HeadingY":1,"Speed":"None","IFFMatch":1,"Flags":""}}}</variable>
</variables>

<!--  Script  -->


<script>
<![CDATA[
require "InfoBox"
mylua = require 'json'
ContN = InfoBox:New("IBDemoHP")


rows = 0;
max_rows = 0;
columns = 0;

function Demofunc()
end











function render()
    sty = InfoBox.barStyles
	ContN = InfoBox:New("IBDemoHP")
    ContN.Bar.textStyle = 1.
    ContN.Bar.barStyle = sty.glass
    ContN:WindowPosition(InfoBox.windowPositions.S)
    ContN:Rows(max_rows)
    ContN:Columns(12)
	ContN.axis = "rows"

    
	addBar("##")
    for a, b in pairs(jOutput.Contacts) do        
        addBar(tonumber(string.format("%.3f", jOutput.Contacts[a].Num)))
    end
	addBar("Type")
    for a, b in pairs(jOutput.Contacts) do
    addBar(jOutput.Contacts[a].Type)
    end
	addBar("Resolution")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].Resolution)
    end
	addBar("Bearing")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].Bearing)
    end
	addBar("Range")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].Range)
    end
	addBar("Arcs")
	for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].Arc)
    end
	addBar("Facing Arcs")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].FacingArc)
    end
	addBar("Heading")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].HeadingX .. " " .. jOutput.Contacts[a].HeadingY)
    end
	addBar("Speed")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].Speed)
    end
	addBar("Name")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].Name)
    end
	addBar("Class")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].Class)
    end
	addBar("Flags")
    for a, b in pairs(jOutput.Contacts) do
        
        addBar(jOutput.Contacts[a].Flags)
    end
	ContN:Update()
    -- Following values are normally set by other triggers.

end


function buildRows()

	
end


function addBar(name)
    
	ContN:AddBar(name, 0, "red", "#FF0000", false)
    
end

function json()
    local senrep

    senrep = GetVariable("senrep")
    jOutput = mylua.decode(senrep)

    for a, b in pairs(jOutput.Contacts) do
        max_rows = max_rows + 1
    end
	
    render()

end

]]>
</script>


</muclient>
